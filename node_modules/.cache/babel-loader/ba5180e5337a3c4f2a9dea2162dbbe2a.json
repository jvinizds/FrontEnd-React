{"ast":null,"code":"var _jsxFileName = \"/home/joao/projetos/frontend/src/pages/Categorias.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Table from 'react-bootstrap/Table';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Toast from 'react-bootstrap/Toast';\nimport Cabecalho from '../components/Cabecalho';\nimport Rodape from '../components/Rodape';\nimport { BACKEND } from '../constants';\nimport { MdRestaurantMenu, MdSave } from 'react-icons/md';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Categorias = () => {\n  _s();\n\n  useEffect(() => {\n    document.title = 'Cadastro de categorias';\n    obterCategorias();\n  }, []);\n  const valorInicial = {\n    nome: '',\n    status: true\n  };\n  const [categoria, setCategoria] = useState(valorInicial);\n  const [categorias, setCategorias] = useState([]);\n  const [carregandoCategorias, setCarregandoCategorias] = useState(false);\n  const [erros, setErros] = useState({});\n  const {\n    nome,\n    status\n  } = categoria;\n\n  async function obterCategorias() {\n    setCarregandoCategorias(true);\n    let url = `${BACKEND}/categorias`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setCategorias(data);\n    }).catch(function (error) {\n      console.error(`Erro ao obter as categorias: ${error.message}`);\n    });\n    setCarregandoCategorias(false);\n  }\n\n  const alteraDadosCategoria = e => {\n    setCategoria({ ...categoria,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const validaErrosCategoria = () => {\n    const {\n      nome\n    } = categoria;\n    const novosErros = {}; //Validação para nome\n\n    if (!nome || nome === '') novosErros.nome = 'O nome não pode ser vazio';else if (nome.lenght > 30) novosErros.nome = 'O nome da categoria é muito longo';else if (nome.lenght < 3) novosErros.nome = 'O nome da categoria é muito curto';\n  };\n\n  async function salvarCategoria(e) {\n    //Evitar comportamento de recarregar pagina\n    e.preventDefault();\n    const novosErros = validaErrosCategoria(); //Existe algum erro no array?\n\n    if (Object.keys(novosErros).lenght > 0) {\n      setErros(novosErros);\n    } else {\n      alert('Iremos salvar...');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"p-0\",\n      children: [/*#__PURE__*/_jsxDEV(Cabecalho, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [/*#__PURE__*/_jsxDEV(MdRestaurantMenu, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), \"Categorias de Restaurantes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          lg: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Cadastro de categorias\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            method: \"post\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Nome da Categoria\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                name: \"nome\",\n                placeholder: \"Ex: Cantinas\",\n                value: nome,\n                onChange: alteraDadosCategoria,\n                isInvalid: !!erros.nome\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: erros.nome\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              title: \"Salvar o registro\",\n              onClick: e => salvarCategoria(e),\n              children: \"Salvar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          lg: 6,\n          children: [carregandoCategorias && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              size: \"sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"grow\",\n              variant: \"info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Aguarde, enquanto as categorias s\\xE3o carregadas...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Nome\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Inclus\\xE3o\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: categorias.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.nome\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.createdAt\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 41\n                }, this)]\n              }, item._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Rodape, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Categorias, \"3QVAUredhBVSHc+GpdCb3AIf5pw=\");\n\n_c = Categorias;\nexport default Categorias;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categorias\");","map":{"version":3,"sources":["/home/joao/projetos/frontend/src/pages/Categorias.js"],"names":["React","useEffect","useState","Container","Row","Col","Spinner","Table","Form","Button","Modal","Toast","Cabecalho","Rodape","BACKEND","MdRestaurantMenu","MdSave","Categorias","document","title","obterCategorias","valorInicial","nome","status","categoria","setCategoria","categorias","setCategorias","carregandoCategorias","setCarregandoCategorias","erros","setErros","url","fetch","then","response","json","data","catch","error","console","message","alteraDadosCategoria","e","target","name","value","validaErrosCategoria","novosErros","lenght","salvarCategoria","preventDefault","Object","keys","alert","map","item","createdAt","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,SAASC,gBAAT,EAA2BC,MAA3B,QAAwC,gBAAxC;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErBhB,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,QAAQ,CAACC,KAAT,GAAiB,wBAAjB;AACAC,IAAAA,eAAe;AAClB,GAHQ,EAGN,EAHM,CAAT;AAKA,QAAMC,YAAY,GAAG;AACjBC,IAAAA,IAAI,EAAE,EADW;AAEjBC,IAAAA,MAAM,EAAE;AAFS,GAArB;AAIA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BvB,QAAQ,CAACmB,YAAD,CAA1C;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BzB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC0B,oBAAD,EAAuBC,uBAAvB,IAAkD3B,QAAQ,CAAC,KAAD,CAAhE;AACA,QAAM,CAAC4B,KAAD,EAAQC,QAAR,IAAoB7B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEoB,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBC,SAAzB;;AAEA,iBAAeJ,eAAf,GAAiC;AAC7BS,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACA,QAAIG,GAAG,GAAI,GAAElB,OAAQ,aAArB;AACA,UAAMmB,KAAK,CAACD,GAAD,CAAL,CACDE,IADC,CACIC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADhB,EAEDF,IAFC,CAEIG,IAAI,IAAI;AACVV,MAAAA,aAAa,CAACU,IAAD,CAAb;AACH,KAJC,EAKDC,KALC,CAKK,UAAUC,KAAV,EAAiB;AACpBC,MAAAA,OAAO,CAACD,KAAR,CAAe,gCAA+BA,KAAK,CAACE,OAAQ,EAA5D;AACH,KAPC,CAAN;AAQAZ,IAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACH;;AAED,QAAMa,oBAAoB,GAAGC,CAAC,IAAI;AAC9BlB,IAAAA,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgB,OAACmB,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAA1C,KAAD,CAAZ;AACH,GAFD;;AAIA,QAAMC,oBAAoB,GAAG,MAAM;AAC/B,UAAM;AAAEzB,MAAAA;AAAF,QAAWE,SAAjB;AACA,UAAMwB,UAAU,GAAG,EAAnB,CAF+B,CAG/B;;AACA,QAAI,CAAC1B,IAAD,IAASA,IAAI,KAAK,EAAtB,EAA0B0B,UAAU,CAAC1B,IAAX,GAAkB,2BAAlB,CAA1B,KACK,IAAIA,IAAI,CAAC2B,MAAL,GAAc,EAAlB,EAAsBD,UAAU,CAAC1B,IAAX,GAAkB,mCAAlB,CAAtB,KACA,IAAIA,IAAI,CAAC2B,MAAL,GAAc,CAAlB,EAAqBD,UAAU,CAAC1B,IAAX,GAAkB,mCAAlB;AAC7B,GAPD;;AASA,iBAAe4B,eAAf,CAA+BP,CAA/B,EAAkC;AAC9B;AACAA,IAAAA,CAAC,CAACQ,cAAF;AACA,UAAMH,UAAU,GAAGD,oBAAoB,EAAvC,CAH8B,CAI9B;;AACA,QAAIK,MAAM,CAACC,IAAP,CAAYL,UAAZ,EAAwBC,MAAxB,GAAiC,CAArC,EAAwC;AACpClB,MAAAA,QAAQ,CAACiB,UAAD,CAAR;AACH,KAFD,MAEO;AACHM,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACH;AACJ;;AAED,sBACI;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,SAAS,EAAC,KAA3B;AAAA,8BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,GAAD;AAAA,+BACI,QAAC,GAAD;AAAA,iCACI;AAAA,oCAAI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,oBAAJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAOI,QAAC,GAAD;AAAA,gCACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAa,UAAA,EAAE,EAAE,CAAjB;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD;AAAM,YAAA,MAAM,EAAC,MAAb;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAA,sCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,gBAAA,IAAI,EAAC,MADT;AAEI,gBAAA,WAAW,EAAC,cAFhB;AAGI,gBAAA,KAAK,EAAEhC,IAHX;AAII,gBAAA,QAAQ,EAAEoB,oBAJd;AAKI,gBAAA,SAAS,EAAE,CAAC,CAACZ,KAAK,CAACR;AALvB;AAAA;AAAA;AAAA;AAAA,sBAFJ,eASI,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,gBAAA,IAAI,EAAC,SAA5B;AAAA,0BACKQ,KAAK,CAACR;AADX;AAAA;AAAA;AAAA;AAAA,sBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAcI,QAAC,MAAD;AACI,cAAA,OAAO,EAAC,SADZ;AAEI,cAAA,IAAI,EAAC,QAFT;AAGI,cAAA,KAAK,EAAC,mBAHV;AAII,cAAA,OAAO,EAAGqB,CAAD,IAAOO,eAAe,CAACP,CAAD,CAJnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eA2BI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAa,UAAA,EAAE,EAAE,CAAjB;AAAA,qBACKf,oBAAoB,iBACjB;AAAA,oCACI,QAAC,OAAD;AAAS,cAAA,SAAS,EAAC,QAAnB;AAA4B,cAAA,IAAI,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,OAAD;AAAS,cAAA,SAAS,EAAC,MAAnB;AAA0B,cAAA,OAAO,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA,0BAFR,eAQI,QAAC,KAAD;AAAA,oCACI;AAAA,qCACI;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAQI;AAAA,wBACKF,UAAU,CAAC6B,GAAX,CAAeC,IAAI,iBAChB;AAAA,wCACI;AAAA,4BAAKA,IAAI,CAAClC;AAAV;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,4BAAKkC,IAAI,CAACjC;AAAV;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAA,4BAAKiC,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,wBAHJ;AAAA,iBAASD,IAAI,CAACE,GAAd;AAAA;AAAA;AAAA;AAAA,sBADH;AADL;AAAA;AAAA;AAAA;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eA8DI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cA9DJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAoEH,CA5HD;;GAAMzC,U;;KAAAA,U;AA8HN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Table from 'react-bootstrap/Table'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Toast from 'react-bootstrap/Toast'\n\nimport Cabecalho from '../components/Cabecalho'\nimport Rodape from '../components/Rodape'\nimport { BACKEND } from '../constants'\n\nimport { MdRestaurantMenu, MdSave} from 'react-icons/md'\n\nconst Categorias = () => {\n\n    useEffect(() => {\n        document.title = 'Cadastro de categorias'\n        obterCategorias()\n    }, [])\n\n    const valorInicial = {\n        nome: '',\n        status: true\n    }\n    const [categoria, setCategoria] = useState(valorInicial)\n    const [categorias, setCategorias] = useState([])\n    const [carregandoCategorias, setCarregandoCategorias] = useState(false)\n    const [erros, setErros] = useState({})\n    const { nome, status } = categoria\n\n    async function obterCategorias() {\n        setCarregandoCategorias(true)\n        let url = `${BACKEND}/categorias`\n        await fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                setCategorias(data)\n            })\n            .catch(function (error) {\n                console.error(`Erro ao obter as categorias: ${error.message}`)\n            })\n        setCarregandoCategorias(false)\n    }\n\n    const alteraDadosCategoria = e => {\n        setCategoria({ ...categoria, [e.target.name]: e.target.value })\n    }\n\n    const validaErrosCategoria = () => {\n        const { nome } = categoria\n        const novosErros = {}\n        //Validação para nome\n        if (!nome || nome === '') novosErros.nome = 'O nome não pode ser vazio'\n        else if (nome.lenght > 30) novosErros.nome = 'O nome da categoria é muito longo'\n        else if (nome.lenght < 3) novosErros.nome = 'O nome da categoria é muito curto'\n    }\n\n    async function salvarCategoria(e) {\n        //Evitar comportamento de recarregar pagina\n        e.preventDefault()\n        const novosErros = validaErrosCategoria()\n        //Existe algum erro no array?\n        if (Object.keys(novosErros).lenght > 0) {\n            setErros(novosErros)\n        } else {\n            alert('Iremos salvar...')\n        }\n    }\n\n    return (\n        <>\n            <Container fluid className=\"p-0\">\n                <Cabecalho />\n                <Row>\n                    <Col>\n                        <h3><MdRestaurantMenu />Categorias de Restaurantes</h3>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs={12} lg={6}>\n                        <p>Cadastro de categorias</p>\n                        <Form method=\"post\">\n                            <Form.Group>\n                                <Form.Label>Nome da Categoria</Form.Label>\n                                <Form.Control\n                                    name=\"nome\"\n                                    placeholder=\"Ex: Cantinas\"\n                                    value={nome}\n                                    onChange={alteraDadosCategoria}\n                                    isInvalid={!!erros.nome}\n                                />\n                                <Form.Control.Feedback type='invalid'>\n                                    {erros.nome}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                            <Button\n                                variant=\"primary\"\n                                type=\"submit\"\n                                title=\"Salvar o registro\"\n                                onClick={(e) => salvarCategoria(e)}\n                            >\n                                Salvar\n                            </Button>\n                        </Form>\n                    </Col>\n                    <Col xs={12} lg={6}>\n                        {carregandoCategorias &&\n                            <>\n                                <Spinner animation=\"border\" size=\"sm\" />\n                                <Spinner animation=\"grow\" variant=\"info\" />\n                                <p>Aguarde, enquanto as categorias são carregadas...</p>\n                            </>\n                        }\n                        <Table>\n                            <thead>\n                                <tr>\n                                    <td>Nome</td>\n                                    <td>Status</td>\n                                    <td>Inclusão</td>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {categorias.map(item => (\n                                    <tr key={item._id}>\n                                        <td>{item.nome}</td>\n                                        <td>{item.status}</td>\n                                        <td>{item.createdAt}</td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    </Col>\n                </Row>\n                <Rodape />\n            </Container>\n        </>\n    )\n}\n\nexport default Categorias"]},"metadata":{},"sourceType":"module"}